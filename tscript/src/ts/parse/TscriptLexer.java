// Generated from Tscript.g by ANTLR 4.4

  package ts.parse;
  import ts.Location;
  import ts.tree.*;
  import static ts.parse.TreeBuilder.*;
  import java.util.List;
  import java.util.ArrayList;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TscriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		NUMERIC_LITERAL=1, STRING_LITERAL=2, BOOLEANL_LITERAL=3, NULLL_LITERAL=4, 
		THIS=5, LPAREN=6, RPAREN=7, SEMICOLON=8, EQUAL=9, PLUS=10, MINUS=11, ASTERISK=12, 
		SLASH=13, NOT=14, EQUALITY=15, SMALLER=16, LARGER=17, COMMA=18, LBRACE=19, 
		RBRACE=20, POINT=21, PRINT=22, VAR=23, TRY=24, BREAK=25, CONTINUE=26, 
		CATCH=27, FINALLY=28, THROW=29, IF=30, WHILE=31, ELSE=32, FUNCTION=33, 
		RETURN=34, NEW=35, IDENTIFIER=36, WhiteSpace=37;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'"
	};
	public static final String[] ruleNames = {
		"IdentifierCharacters", "SpaceTokens", "SpaceChars", "EndOfLineComment", 
		"LineTerminator", "DecimalDigit", "NonZeroDigit", "ExponentPart", "ExponentIndicator", 
		"SignedInteger", "HexIntegerLiteral", "HexDigit", "DecimalIntegerLiteral", 
		"DecimalDigits", "DecimalLiteral", "DoubleStringCharacters", "SingleStringCharacters", 
		"DoubleStringCharacter", "SingleStringCharacter", "LineContinuation", 
		"EscapeSequence", "CharacterEscapeSequence", "SingleEscapeCharacter", 
		"NonEscapeCharacter", "EscapeCharacter", "HexEscapeSequence", "UnicodeEscapeSequence", 
		"NUMERIC_LITERAL", "STRING_LITERAL", "BOOLEANL_LITERAL", "NULLL_LITERAL", 
		"THIS", "LPAREN", "RPAREN", "SEMICOLON", "EQUAL", "PLUS", "MINUS", "ASTERISK", 
		"SLASH", "NOT", "EQUALITY", "SMALLER", "LARGER", "COMMA", "LBRACE", "RBRACE", 
		"POINT", "PRINT", "VAR", "TRY", "BREAK", "CONTINUE", "CATCH", "FINALLY", 
		"THROW", "IF", "WHILE", "ELSE", "FUNCTION", "RETURN", "NEW", "IDENTIFIER", 
		"WhiteSpace"
	};


	  // grab location info (filename/line/column) from token
	  // in order to stick into AST nodes for later error reporting
	  public Location loc(final Token token)
	  {
	    return new Location(getSourceName(), token.getLine(),
	      token.getCharPositionInLine());
	  }

	  // a program is a list of statements
	  // i.e. root of AST is stored here
	  // set by the action for the start symbol
	  private List<Statement> semanticValue;
	  public List<Statement> getSemanticValue()
	  {
	    return semanticValue;
	  }


	public TscriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Tscript.g"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\'\u01cd\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\7\2\u0086\n\2\f\2\16\2\u0089\13\2\3\3"+
		"\3\3\3\3\5\3\u008e\n\3\3\4\3\4\3\5\3\5\3\5\3\5\7\5\u0096\n\5\f\5\16\5"+
		"\u0099\13\5\3\5\3\5\5\5\u009d\n\5\3\6\3\6\3\6\5\6\u00a2\n\6\3\7\3\7\3"+
		"\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\5\13\u00b2\n\13\3"+
		"\f\3\f\3\f\6\f\u00b7\n\f\r\f\16\f\u00b8\3\r\3\r\3\16\3\16\3\16\7\16\u00c0"+
		"\n\16\f\16\16\16\u00c3\13\16\5\16\u00c5\n\16\3\17\3\17\3\17\3\17\5\17"+
		"\u00cb\n\17\3\20\3\20\3\20\7\20\u00d0\n\20\f\20\16\20\u00d3\13\20\3\20"+
		"\7\20\u00d6\n\20\f\20\16\20\u00d9\13\20\3\20\3\20\3\20\7\20\u00de\n\20"+
		"\f\20\16\20\u00e1\13\20\3\20\3\20\7\20\u00e5\n\20\f\20\16\20\u00e8\13"+
		"\20\5\20\u00ea\n\20\3\21\3\21\7\21\u00ee\n\21\f\21\16\21\u00f1\13\21\3"+
		"\22\3\22\7\22\u00f5\n\22\f\22\16\22\u00f8\13\22\3\23\3\23\3\23\3\23\5"+
		"\23\u00fe\n\23\3\24\3\24\3\24\3\24\5\24\u0104\n\24\3\25\3\25\3\25\3\26"+
		"\3\26\3\26\3\26\5\26\u010d\n\26\3\27\3\27\5\27\u0111\n\27\3\30\3\30\3"+
		"\31\3\31\3\32\3\32\3\32\5\32\u011a\n\32\3\33\3\33\3\33\3\33\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\35\3\35\5\35\u0128\n\35\3\36\3\36\7\36\u012c\n"+
		"\36\f\36\16\36\u012f\13\36\3\36\3\36\3\36\7\36\u0134\n\36\f\36\16\36\u0137"+
		"\13\36\3\36\5\36\u013a\n\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3"+
		"\37\5\37\u0145\n\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$"+
		"\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/\3"+
		"/\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63"+
		"\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\38\3"+
		"8\38\38\38\39\39\39\39\39\39\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3"+
		"<\3=\3=\3=\3=\3=\3=\3=\3=\3=\3>\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3@\3@\3"+
		"A\6A\u01c8\nA\rA\16A\u01c9\3A\3A\2\2B\3\2\5\2\7\2\t\2\13\2\r\2\17\2\21"+
		"\2\23\2\25\2\27\2\31\2\33\2\35\2\37\2!\2#\2%\2\'\2)\2+\2-\2/\2\61\2\63"+
		"\2\65\2\67\29\3;\4=\5?\6A\7C\bE\tG\nI\13K\fM\rO\16Q\17S\20U\21W\22Y\23"+
		"[\24]\25_\26a\27c\30e\31g\32i\33k\34m\35o\36q\37s u!w\"y#{$}%\177&\u0081"+
		"\'\3\2%\6\2&&C\\aac|\7\2&&\62;C\\aac|\5\2\13\13\16\16\"\"\4\2\f\f\17\17"+
		"\3\2\62;\3\2\63;\4\2GGgg\3\2--\3\2//\3\2\62\62\4\2ZZzz\5\2\62;CHch\3\2"+
		"\60\60\6\2\f\f\17\17$$^^\3\2^^\6\2\f\f\17\17))^^\13\2$$))^^ddhhppttvv"+
		"xx\16\2\f\f\17\17$$))\62;^^ddhhppttvxzz\4\2wwzz\3\2zz\3\2ww\3\2$$\3\2"+
		"))\3\2**\3\2++\3\2==\3\2??\3\2,,\3\2\61\61\3\2##\3\2>>\3\2@@\3\2..\3\2"+
		"}}\3\2\177\177\u01d5\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3"+
		"\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2"+
		"\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2"+
		"[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3"+
		"\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2"+
		"\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2"+
		"\2\2\u0081\3\2\2\2\3\u0083\3\2\2\2\5\u008d\3\2\2\2\7\u008f\3\2\2\2\t\u0091"+
		"\3\2\2\2\13\u00a1\3\2\2\2\r\u00a3\3\2\2\2\17\u00a5\3\2\2\2\21\u00a7\3"+
		"\2\2\2\23\u00aa\3\2\2\2\25\u00b1\3\2\2\2\27\u00b3\3\2\2\2\31\u00ba\3\2"+
		"\2\2\33\u00c4\3\2\2\2\35\u00ca\3\2\2\2\37\u00e9\3\2\2\2!\u00eb\3\2\2\2"+
		"#\u00f2\3\2\2\2%\u00fd\3\2\2\2\'\u0103\3\2\2\2)\u0105\3\2\2\2+\u010c\3"+
		"\2\2\2-\u0110\3\2\2\2/\u0112\3\2\2\2\61\u0114\3\2\2\2\63\u0119\3\2\2\2"+
		"\65\u011b\3\2\2\2\67\u011f\3\2\2\29\u0127\3\2\2\2;\u0139\3\2\2\2=\u0144"+
		"\3\2\2\2?\u0146\3\2\2\2A\u014b\3\2\2\2C\u0150\3\2\2\2E\u0152\3\2\2\2G"+
		"\u0154\3\2\2\2I\u0156\3\2\2\2K\u0158\3\2\2\2M\u015a\3\2\2\2O\u015c\3\2"+
		"\2\2Q\u015e\3\2\2\2S\u0160\3\2\2\2U\u0162\3\2\2\2W\u0165\3\2\2\2Y\u0167"+
		"\3\2\2\2[\u0169\3\2\2\2]\u016b\3\2\2\2_\u016d\3\2\2\2a\u016f\3\2\2\2c"+
		"\u0171\3\2\2\2e\u0177\3\2\2\2g\u017b\3\2\2\2i\u017f\3\2\2\2k\u0185\3\2"+
		"\2\2m\u018e\3\2\2\2o\u0194\3\2\2\2q\u019c\3\2\2\2s\u01a2\3\2\2\2u\u01a5"+
		"\3\2\2\2w\u01ab\3\2\2\2y\u01b0\3\2\2\2{\u01b9\3\2\2\2}\u01c0\3\2\2\2\177"+
		"\u01c4\3\2\2\2\u0081\u01c7\3\2\2\2\u0083\u0087\t\2\2\2\u0084\u0086\t\3"+
		"\2\2\u0085\u0084\3\2\2\2\u0086\u0089\3\2\2\2\u0087\u0085\3\2\2\2\u0087"+
		"\u0088\3\2\2\2\u0088\4\3\2\2\2\u0089\u0087\3\2\2\2\u008a\u008e\5\7\4\2"+
		"\u008b\u008e\5\13\6\2\u008c\u008e\5\t\5\2\u008d\u008a\3\2\2\2\u008d\u008b"+
		"\3\2\2\2\u008d\u008c\3\2\2\2\u008e\6\3\2\2\2\u008f\u0090\t\4\2\2\u0090"+
		"\b\3\2\2\2\u0091\u0092\7\61\2\2\u0092\u0093\7\61\2\2\u0093\u0097\3\2\2"+
		"\2\u0094\u0096\n\5\2\2\u0095\u0094\3\2\2\2\u0096\u0099\3\2\2\2\u0097\u0095"+
		"\3\2\2\2\u0097\u0098\3\2\2\2\u0098\u009c\3\2\2\2\u0099\u0097\3\2\2\2\u009a"+
		"\u009d\5\13\6\2\u009b\u009d\7\2\2\3\u009c\u009a\3\2\2\2\u009c\u009b\3"+
		"\2\2\2\u009d\n\3\2\2\2\u009e\u009f\7\17\2\2\u009f\u00a2\7\f\2\2\u00a0"+
		"\u00a2\t\5\2\2\u00a1\u009e\3\2\2\2\u00a1\u00a0\3\2\2\2\u00a2\f\3\2\2\2"+
		"\u00a3\u00a4\t\6\2\2\u00a4\16\3\2\2\2\u00a5\u00a6\t\7\2\2\u00a6\20\3\2"+
		"\2\2\u00a7\u00a8\5\23\n\2\u00a8\u00a9\5\25\13\2\u00a9\22\3\2\2\2\u00aa"+
		"\u00ab\t\b\2\2\u00ab\24\3\2\2\2\u00ac\u00b2\5\35\17\2\u00ad\u00ae\t\t"+
		"\2\2\u00ae\u00b2\5\35\17\2\u00af\u00b0\t\n\2\2\u00b0\u00b2\5\35\17\2\u00b1"+
		"\u00ac\3\2\2\2\u00b1\u00ad\3\2\2\2\u00b1\u00af\3\2\2\2\u00b2\26\3\2\2"+
		"\2\u00b3\u00b4\t\13\2\2\u00b4\u00b6\t\f\2\2\u00b5\u00b7\5\31\r\2\u00b6"+
		"\u00b5\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8\u00b6\3\2\2\2\u00b8\u00b9\3\2"+
		"\2\2\u00b9\30\3\2\2\2\u00ba\u00bb\t\r\2\2\u00bb\32\3\2\2\2\u00bc\u00c5"+
		"\t\13\2\2\u00bd\u00c1\5\17\b\2\u00be\u00c0\5\35\17\2\u00bf\u00be\3\2\2"+
		"\2\u00c0\u00c3\3\2\2\2\u00c1\u00bf\3\2\2\2\u00c1\u00c2\3\2\2\2\u00c2\u00c5"+
		"\3\2\2\2\u00c3\u00c1\3\2\2\2\u00c4\u00bc\3\2\2\2\u00c4\u00bd\3\2\2\2\u00c5"+
		"\34\3\2\2\2\u00c6\u00cb\5\r\7\2\u00c7\u00c8\5\r\7\2\u00c8\u00c9\5\35\17"+
		"\2\u00c9\u00cb\3\2\2\2\u00ca\u00c6\3\2\2\2\u00ca\u00c7\3\2\2\2\u00cb\36"+
		"\3\2\2\2\u00cc\u00cd\5\33\16\2\u00cd\u00d1\t\16\2\2\u00ce\u00d0\5\35\17"+
		"\2\u00cf\u00ce\3\2\2\2\u00d0\u00d3\3\2\2\2\u00d1\u00cf\3\2\2\2\u00d1\u00d2"+
		"\3\2\2\2\u00d2\u00d7\3\2\2\2\u00d3\u00d1\3\2\2\2\u00d4\u00d6\5\21\t\2"+
		"\u00d5\u00d4\3\2\2\2\u00d6\u00d9\3\2\2\2\u00d7\u00d5\3\2\2\2\u00d7\u00d8"+
		"\3\2\2\2\u00d8\u00ea\3\2\2\2\u00d9\u00d7\3\2\2\2\u00da\u00db\t\16\2\2"+
		"\u00db\u00df\5\35\17\2\u00dc\u00de\5\21\t\2\u00dd\u00dc\3\2\2\2\u00de"+
		"\u00e1\3\2\2\2\u00df\u00dd\3\2\2\2\u00df\u00e0\3\2\2\2\u00e0\u00ea\3\2"+
		"\2\2\u00e1\u00df\3\2\2\2\u00e2\u00e6\5\33\16\2\u00e3\u00e5\5\21\t\2\u00e4"+
		"\u00e3\3\2\2\2\u00e5\u00e8\3\2\2\2\u00e6\u00e4\3\2\2\2\u00e6\u00e7\3\2"+
		"\2\2\u00e7\u00ea\3\2\2\2\u00e8\u00e6\3\2\2\2\u00e9\u00cc\3\2\2\2\u00e9"+
		"\u00da\3\2\2\2\u00e9\u00e2\3\2\2\2\u00ea \3\2\2\2\u00eb\u00ef\5%\23\2"+
		"\u00ec\u00ee\5!\21\2\u00ed\u00ec\3\2\2\2\u00ee\u00f1\3\2\2\2\u00ef\u00ed"+
		"\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\"\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f2"+
		"\u00f6\5\'\24\2\u00f3\u00f5\5#\22\2\u00f4\u00f3\3\2\2\2\u00f5\u00f8\3"+
		"\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7$\3\2\2\2\u00f8\u00f6"+
		"\3\2\2\2\u00f9\u00fe\n\17\2\2\u00fa\u00fb\t\20\2\2\u00fb\u00fe\5+\26\2"+
		"\u00fc\u00fe\5)\25\2\u00fd\u00f9\3\2\2\2\u00fd\u00fa\3\2\2\2\u00fd\u00fc"+
		"\3\2\2\2\u00fe&\3\2\2\2\u00ff\u0104\n\21\2\2\u0100\u0101\t\20\2\2\u0101"+
		"\u0104\5+\26\2\u0102\u0104\5)\25\2\u0103\u00ff\3\2\2\2\u0103\u0100\3\2"+
		"\2\2\u0103\u0102\3\2\2\2\u0104(\3\2\2\2\u0105\u0106\t\20\2\2\u0106\u0107"+
		"\5\13\6\2\u0107*\3\2\2\2\u0108\u010d\5-\27\2\u0109\u010d\t\13\2\2\u010a"+
		"\u010d\5\65\33\2\u010b\u010d\5\67\34\2\u010c\u0108\3\2\2\2\u010c\u0109"+
		"\3\2\2\2\u010c\u010a\3\2\2\2\u010c\u010b\3\2\2\2\u010d,\3\2\2\2\u010e"+
		"\u0111\5/\30\2\u010f\u0111\5\61\31\2\u0110\u010e\3\2\2\2\u0110\u010f\3"+
		"\2\2\2\u0111.\3\2\2\2\u0112\u0113\t\22\2\2\u0113\60\3\2\2\2\u0114\u0115"+
		"\n\23\2\2\u0115\62\3\2\2\2\u0116\u011a\5/\30\2\u0117\u011a\5\r\7\2\u0118"+
		"\u011a\t\24\2\2\u0119\u0116\3\2\2\2\u0119\u0117\3\2\2\2\u0119\u0118\3"+
		"\2\2\2\u011a\64\3\2\2\2\u011b\u011c\t\25\2\2\u011c\u011d\5\31\r\2\u011d"+
		"\u011e\5\31\r\2\u011e\66\3\2\2\2\u011f\u0120\t\26\2\2\u0120\u0121\5\31"+
		"\r\2\u0121\u0122\5\31\r\2\u0122\u0123\5\31\r\2\u0123\u0124\5\31\r\2\u0124"+
		"8\3\2\2\2\u0125\u0128\5\37\20\2\u0126\u0128\5\27\f\2\u0127\u0125\3\2\2"+
		"\2\u0127\u0126\3\2\2\2\u0128:\3\2\2\2\u0129\u012d\t\27\2\2\u012a\u012c"+
		"\5%\23\2\u012b\u012a\3\2\2\2\u012c\u012f\3\2\2\2\u012d\u012b\3\2\2\2\u012d"+
		"\u012e\3\2\2\2\u012e\u0130\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u013a\t\27"+
		"\2\2\u0131\u0135\t\30\2\2\u0132\u0134\5#\22\2\u0133\u0132\3\2\2\2\u0134"+
		"\u0137\3\2\2\2\u0135\u0133\3\2\2\2\u0135\u0136\3\2\2\2\u0136\u0138\3\2"+
		"\2\2\u0137\u0135\3\2\2\2\u0138\u013a\t\30\2\2\u0139\u0129\3\2\2\2\u0139"+
		"\u0131\3\2\2\2\u013a<\3\2\2\2\u013b\u013c\7v\2\2\u013c\u013d\7t\2\2\u013d"+
		"\u013e\7w\2\2\u013e\u0145\7g\2\2\u013f\u0140\7h\2\2\u0140\u0141\7c\2\2"+
		"\u0141\u0142\7n\2\2\u0142\u0143\7u\2\2\u0143\u0145\7g\2\2\u0144\u013b"+
		"\3\2\2\2\u0144\u013f\3\2\2\2\u0145>\3\2\2\2\u0146\u0147\7p\2\2\u0147\u0148"+
		"\7w\2\2\u0148\u0149\7n\2\2\u0149\u014a\7n\2\2\u014a@\3\2\2\2\u014b\u014c"+
		"\7v\2\2\u014c\u014d\7j\2\2\u014d\u014e\7k\2\2\u014e\u014f\7u\2\2\u014f"+
		"B\3\2\2\2\u0150\u0151\t\31\2\2\u0151D\3\2\2\2\u0152\u0153\t\32\2\2\u0153"+
		"F\3\2\2\2\u0154\u0155\t\33\2\2\u0155H\3\2\2\2\u0156\u0157\t\34\2\2\u0157"+
		"J\3\2\2\2\u0158\u0159\t\t\2\2\u0159L\3\2\2\2\u015a\u015b\t\n\2\2\u015b"+
		"N\3\2\2\2\u015c\u015d\t\35\2\2\u015dP\3\2\2\2\u015e\u015f\t\36\2\2\u015f"+
		"R\3\2\2\2\u0160\u0161\t\37\2\2\u0161T\3\2\2\2\u0162\u0163\t\34\2\2\u0163"+
		"\u0164\t\34\2\2\u0164V\3\2\2\2\u0165\u0166\t \2\2\u0166X\3\2\2\2\u0167"+
		"\u0168\t!\2\2\u0168Z\3\2\2\2\u0169\u016a\t\"\2\2\u016a\\\3\2\2\2\u016b"+
		"\u016c\t#\2\2\u016c^\3\2\2\2\u016d\u016e\t$\2\2\u016e`\3\2\2\2\u016f\u0170"+
		"\t\16\2\2\u0170b\3\2\2\2\u0171\u0172\7r\2\2\u0172\u0173\7t\2\2\u0173\u0174"+
		"\7k\2\2\u0174\u0175\7p\2\2\u0175\u0176\7v\2\2\u0176d\3\2\2\2\u0177\u0178"+
		"\7x\2\2\u0178\u0179\7c\2\2\u0179\u017a\7t\2\2\u017af\3\2\2\2\u017b\u017c"+
		"\7v\2\2\u017c\u017d\7t\2\2\u017d\u017e\7{\2\2\u017eh\3\2\2\2\u017f\u0180"+
		"\7d\2\2\u0180\u0181\7t\2\2\u0181\u0182\7g\2\2\u0182\u0183\7c\2\2\u0183"+
		"\u0184\7m\2\2\u0184j\3\2\2\2\u0185\u0186\7e\2\2\u0186\u0187\7q\2\2\u0187"+
		"\u0188\7p\2\2\u0188\u0189\7v\2\2\u0189\u018a\7k\2\2\u018a\u018b\7p\2\2"+
		"\u018b\u018c\7w\2\2\u018c\u018d\7g\2\2\u018dl\3\2\2\2\u018e\u018f\7e\2"+
		"\2\u018f\u0190\7c\2\2\u0190\u0191\7v\2\2\u0191\u0192\7e\2\2\u0192\u0193"+
		"\7j\2\2\u0193n\3\2\2\2\u0194\u0195\7h\2\2\u0195\u0196\7k\2\2\u0196\u0197"+
		"\7p\2\2\u0197\u0198\7c\2\2\u0198\u0199\7n\2\2\u0199\u019a\7n\2\2\u019a"+
		"\u019b\7{\2\2\u019bp\3\2\2\2\u019c\u019d\7v\2\2\u019d\u019e\7j\2\2\u019e"+
		"\u019f\7t\2\2\u019f\u01a0\7q\2\2\u01a0\u01a1\7y\2\2\u01a1r\3\2\2\2\u01a2"+
		"\u01a3\7k\2\2\u01a3\u01a4\7h\2\2\u01a4t\3\2\2\2\u01a5\u01a6\7y\2\2\u01a6"+
		"\u01a7\7j\2\2\u01a7\u01a8\7k\2\2\u01a8\u01a9\7n\2\2\u01a9\u01aa\7g\2\2"+
		"\u01aav\3\2\2\2\u01ab\u01ac\7g\2\2\u01ac\u01ad\7n\2\2\u01ad\u01ae\7u\2"+
		"\2\u01ae\u01af\7g\2\2\u01afx\3\2\2\2\u01b0\u01b1\7h\2\2\u01b1\u01b2\7"+
		"w\2\2\u01b2\u01b3\7p\2\2\u01b3\u01b4\7e\2\2\u01b4\u01b5\7v\2\2\u01b5\u01b6"+
		"\7k\2\2\u01b6\u01b7\7q\2\2\u01b7\u01b8\7p\2\2\u01b8z\3\2\2\2\u01b9\u01ba"+
		"\7t\2\2\u01ba\u01bb\7g\2\2\u01bb\u01bc\7v\2\2\u01bc\u01bd\7w\2\2\u01bd"+
		"\u01be\7t\2\2\u01be\u01bf\7p\2\2\u01bf|\3\2\2\2\u01c0\u01c1\7p\2\2\u01c1"+
		"\u01c2\7g\2\2\u01c2\u01c3\7y\2\2\u01c3~\3\2\2\2\u01c4\u01c5\5\3\2\2\u01c5"+
		"\u0080\3\2\2\2\u01c6\u01c8\5\5\3\2\u01c7\u01c6\3\2\2\2\u01c8\u01c9\3\2"+
		"\2\2\u01c9\u01c7\3\2\2\2\u01c9\u01ca\3\2\2\2\u01ca\u01cb\3\2\2\2\u01cb"+
		"\u01cc\bA\2\2\u01cc\u0082\3\2\2\2\37\2\u0087\u008d\u0097\u009c\u00a1\u00b1"+
		"\u00b8\u00c1\u00c4\u00ca\u00d1\u00d7\u00df\u00e6\u00e9\u00ef\u00f6\u00fd"+
		"\u0103\u010c\u0110\u0119\u0127\u012d\u0135\u0139\u0144\u01c9\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}